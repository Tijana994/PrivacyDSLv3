/**
 *
 * $Id$
 */
package privacyModel.validation;

import org.eclipse.emf.common.util.EList;

import privacyModel.Complaint;
import privacyModel.ConfigurationManager;
import privacyModel.Consent;
import privacyModel.Denial;
import privacyModel.Document;
import privacyModel.Location;
import privacyModel.Notification;
import privacyModel.PolicyStatement;
import privacyModel.Principal;
import privacyModel.PrivacyData;
import privacyModel.PrivacyPolicyHelper;
import privacyModel.Provider;
import privacyModel.Service;
import privacyModel.SharedPrivacyData;

/**
 * A sample validator interface for {@link privacyModel.PrivacyPolicy}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface PrivacyPolicyValidator {
	boolean validate();

	boolean validatePolicyStatements(EList<PolicyStatement> value);

	boolean validateOwner(Principal value);

	boolean validateAllPrincipals(EList<Principal> value);

	boolean validateLocations(EList<Location> value);

	boolean validateDefaultProtectionControls(EList<String> value);

	boolean validateAllServices(EList<Service> value);

	boolean validateAllProviders(EList<Provider> value);

	boolean validateConfigurationManager(ConfigurationManager value);

	boolean validateAllDatas(EList<PrivacyData> value);

	boolean validateAllComplaints(EList<Complaint> value);

	boolean validatePrivacyPolicyHelper(PrivacyPolicyHelper value);

	boolean validateAllDenials(EList<Denial> value);

	boolean validateAllConsents(EList<Consent> value);

	boolean validateAllDocuments(EList<Document> value);

	boolean validateNotifications(EList<Notification> value);

	boolean validateAllSharedPrivacyData(EList<SharedPrivacyData> value);
}
